本项目采用前后端分离的单页应用架构，前端负责UI交互和媒体处理，后端提供AI能力和数据服务。
┌─────────────────┐    HTTP/WebSocket    ┌──────────────────┐
│   客户端浏览器   │ ←──────────────────→ │   Express服务器   │
│                 │                      │                  │
│ ┌─────────────┐ │                      │ ┌──────────────┐ │
│ │   HTML5 UI  | |                      | |              | |
│ │  - 角色搜索  | |                     │ │   API路由层   │ │
│ │  - 角色选择  │ │                     │ │ - /api/chat   │ │
│ │  - 聊天界面  │ │                     │ │ - /api/tts    │ │
│ │  - 语音识别  │ │                     │ │ - /api/avatar │ │
│ └─────────────┘ │                     │ └──────────────┘ │
│                 │                     │                  │
│ ┌─────────────┐ │                     │ ┌──────────────┐ │
│ │ 浏览器TTS    │ │                     │ │ 业务逻辑层    │ │
│ │ 语音合成API  │ │                     │ │ - 记忆管理    │ │
│ └─────────────┘ │                     │ │ - 才艺检测    │ │
│                 │                     │ │ - 技能系统    │ │
└─────────────────┘                     │ └──────────────┘ │
                                        │                  │
                                        │ ┌──────────────┐ │
                                        │ │ 七牛云AI服务  │ │
                                        │ │ - DeepSeek-v3│ │
                                        │ │ - TTS服务    │ │
                                        │ └──────────────┘ │
                                        └──────────────────┘
核心模块分解

前端模块 (index.html)

1. UI管理模块
角色搜索界面
角色选择界面
聊天界面切换
消息气泡显示
响应式布局适配

2. 语音处理模块
Web Speech API 语音识别
音频播放控制
实时录音状态管理

3. 通信模块
RESTful API 调用封装
错误处理和重试机制
实时状态更新

后端模块 (server.js)

1. API网关层
Express 路由管理
请求验证和过滤
CORS 和安全性处理

2. 智能对话引擎
javascript
class ConversationMemory {
  // 对话记忆管理
  optimizeHistory()    // 历史记录优化
  extractKeywords()    // 关键词提取
  estimateTokens()     // Token数量估算
}

3. 角色技能系统
javascript
class CharacterSkills {
  // 角色专属技能
  kianaSkill()        // 情绪感知
  shengongbaoSkill()  // 心理暗示  
  zeusSkill()         // 逻辑洞察
}

4. TTS服务层
七牛云TTS服务集成
语音参数个性化配置
备用浏览器TTS方案

数据流设计
用户对话流程：用户输入 → 语音识别 → 文本处理 → 对话记忆优化 → AI模型推理 → 回复生成 → TTS语音合成 → 音频播放

API调用序列
聊天API (POST /api/chat)

javascript
{
  chatHistory: Array,           // 对话历史
  enhance_interaction: Boolean, // 增强交互标志
  conversation_flow: String,    // 对话流分析
  current_character: String     // 当前角色
}

TTS API (POST /api/tts)
javascript
{
  text: String,                 // 要合成的文本
  tts_config: Object,           // 语音配置
  character_id: String          // 角色ID
}

关键技术选型
前端框架	HTML/CSS/JS	
后端框架	Express.js	
AI服务	   七牛云DeepSeek-v3模型	
语音合成    七牛云TTS服务
语音识别	Web Speech API	
音频播放	Web Audio API	

系统特色功能
1. 智能记忆管理
动态对话历史优化
关键词提取和记忆保留
Token数量智能控制

2. 角色个性化
不同语音特征（语速、音调）
角色特定技能系统
个性化对话风格